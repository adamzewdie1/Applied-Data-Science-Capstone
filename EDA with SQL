!pip install sqlalchemy==1.3.9

!pip install ipython-sql
!pip install ipython-sql prettytable

%load_ext sql
import csv, sqlite3
import prettytable
prettytable.DEFAULT = 'DEFAULT'

con = sqlite3.connect("my_data1.db")
cur = con.cursor()

!pip install -q pandas

%sql sqlite:///my_data1.db

import pandas as pd
df = pd.read_csv("https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/labs/module_2/data/Spacex.csv")
df.to_sql("SPACEXTBL", con, if_exists='replace', index=False,method="multi")

#DROP THE TABLE IF EXISTS

%sql DROP TABLE IF EXISTS SPACEXTABLE;

%sql create table SPACEXTABLE as select * from SPACEXTBL where Date is not null

%sql Select distinct Launch_Site from SPACEXTABLE 

%sql select* from SPACEXTABLE where Launch_Site LIKE '%CCA%' LIMIT 5

%sql Select  SUM(PAYLOAD_MASS__KG_) AS TOTALPAY_  FROM SPACEXTABLE WHERE Customer = 'NASA (CRS)'	

%sql select avg(PAYLOAD_MASS__KG_) as aver from SPACEXTABLE WHERE Booster_Version = 'F9 v1.1'

%sql select min(Date) as first_date from SPACEXTABLE WHERE Mission_Outcome= 'Success'

%sql select * from SPACEXTABLE LIMIT 5

%sql select Booster_Version,Payload,Landing_Outcome,PAYLOAD_MASS__KG_ from SPACEXTABLE where PAYLOAD_MASS__KG_ > 4000 and PAYLOAD_MASS__KG_<6000 and  Landing_Outcome= 'Success (drone ship)'

%sql select Mission_Outcome, count(*) as counts from SPACEXTABLE group by Mission_Outcome

%sql select Booster_Version, PAYLOAD_MASS__KG_ from SPACEXTABLE WHERE PAYLOAD_MASS__KG_ = ( SELECT MAX(PAYLOAD_MASS__KG_) FROM SPACEXTABLE)

%sql select substr(Date,6,2) as month, Booster_Version,Landing_Outcome,Launch_Site from SPACEXTABLE WHERE substr(Date,0,5)='2015' and Landing_Outcome like '%Failure%' and Landing_Outcome like '%drone ship%'

%sql select Landing_Outcome, count(*) as counts from SPACEXTABLE WHERE Date BETWEEN '2010-06-04' AND '2017-03-20'group by Landing_Outcome order by counts

